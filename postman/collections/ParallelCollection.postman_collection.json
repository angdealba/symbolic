{
	"info": {
		"_postman_id": "6cd100ad-2116-4ba1-b117-5b555fae5fa9",
		"name": "ParallelCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30667543"
	},
	"item": [
		{
			"name": "Authorization",
			"item": [
				{
					"name": "Authenticate Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"token\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"admin\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/client/authenticate",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"client",
								"authenticate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Patient",
			"item": [
				{
					"name": "Create Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"patientId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"vaccinations\": \"COVID-19\",\r\n    \"allergies\": \"Dairy\",\r\n    \"accommodations\": \"Wheelchair Access\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Patient 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"patientId2\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"vaccinations\": \"Measles, Hepatitus B\",\r\n    \"allergies\": \"Pet Dandruff\",\r\n    \"accommodations\": \"Dyslexia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Patient 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"patientId3\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"vaccinations\": \"Hepatitis B\",\r\n    \"allergies\": \"Tree Nuts\",\r\n    \"accommodations\": \"Visual\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Patient 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"patientId4\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"vaccinations\": \"Measles\",\r\n    \"allergies\": \"\",\r\n    \"accommodations\": \"Hearing\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Patient Missing Values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'allergies' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"vaccinations\": \"Measles, Hepatitus B\",\r\n    \"accommodations\": \"Dyslexia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Patients",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/patients",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"patients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Patient by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{patientId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Patient Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Patient Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No patient found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Field updated correctly\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.vaccinations).to.eql(\"COVID-19, Tetanus\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{patientId2}}\",\n    \"vaccinations\": \"COVID-19, Tetanus\",\n    \"allergies\": \"Dairy, Tree Nut\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Patient Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"vaccinations\": \"COVID-19, Tetanus\",\n    \"allergies\": \"Dairy, Tree Nut\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Patient Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No patient found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\",\n    \"vaccinations\": \"COVID-19, Tetanus\",\n    \"allergies\": \"Dairy, Tree Nut\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{patientId3}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Patient Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Patient Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No patient found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"patient"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Medical Practitioner",
			"item": [
				{
					"name": "Create Practitioner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"practitionerId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"latitude\": 40.72,\r\n    \"longitude\": 74.02,\r\n    \"specialization\": \"Dentistry\",\r\n    \"consultationCost\": 60,\r\n    \"yearsExperience\": 20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioner",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Practitioner 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"practitionerId2\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"latitude\": 40.71,\r\n    \"longitude\": 74.01,\r\n    \"specialization\": \"Optometry\",\r\n    \"consultationCost\": 75,\r\n    \"yearsExperience\": 15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioner",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Practitioner 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"practitionerId3\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"latitude\": 40.72,\r\n    \"longitude\": 74.02,\r\n    \"specialization\": \"Dentistry\",\r\n    \"consultationCost\": 60,\r\n    \"yearsExperience\": 20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioner",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Practitioner 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"practitionerId4\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"latitude\": 40.73,\r\n    \"longitude\": 74.03,\r\n    \"specialization\": \"Physical Therapy\",\r\n    \"consultationCost\": 40,\r\n    \"yearsExperience\": 7\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioner",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Practitioner Missing Values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'consultationCost' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"latitude\": 40.73,\r\n    \"longitude\": 74.03,\r\n    \"specialization\": \"Physical Therapy\",\r\n    \"yearsExperience\": 7\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioner",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Practitioner 4 Negative Cost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'consultationCost' field must be a non-negative integer\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"latitude\": 40.73,\r\n    \"longitude\": 74.03,\r\n    \"specialization\": \"Physical Therapy\",\r\n    \"consultationCost\": -1,\r\n    \"yearsExperience\": 7\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioner",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Practitioner 4 Negative Experience",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'yearsExperience' field must be a non-negative integer\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"latitude\": 40.73,\r\n    \"longitude\": 74.03,\r\n    \"specialization\": \"Physical Therapy\",\r\n    \"consultationCost\": 40,\r\n    \"yearsExperience\": -1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioner",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Practitioners",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioners",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioners"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Practitioner by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{practitionerId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioner",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Practitioner Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioner",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Practitioner Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No medical practitioner found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioner",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Practitioner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Field updated correctly\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.consultationCost).to.eql(175);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{practitionerId2}}\",\n    \"consultationCost\": 175,\n    \"yearsExperience\": 16\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioner",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Practitioner Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"latitude\": 40.71,\n    \"longitude\": 74.01,\n    \"specialization\": \"Optometry\",\n    \"consultationCost\": 75,\n    \"yearsExperience\": 15\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioner",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Practitioner Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No medical practitioner found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\",\n    \"latitude\": 40.71,\n    \"longitude\": 74.01,\n    \"specialization\": \"Optometry\",\n    \"consultationCost\": 75,\n    \"yearsExperience\": 15\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioner",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Practitioner Negative Cost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'consultationCost' field must be a non-negative integer\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{practitionerId2}}\",\n    \"consultationCost\": -1,\n    \"yearsExperience\": 16\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioner",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Practitioner Negative Years",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'yearsExperience' field must be a non-negative integer\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{practitionerId2}}\",\n    \"consultationCost\": 175,\n    \"yearsExperience\": -1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioner",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Practitioner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{practitionerId3}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioner",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Practitioner Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioner",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Practitioner Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No medical practitioner found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/practitioner",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"practitioner"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Facility",
			"item": [
				{
					"name": "Create Facility",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"facilityId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"latitude\": 40.7,\r\n    \"longitude\": 74.0,\r\n    \"specialization\": \"Surgery\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/facility",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"facility"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Facility 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"facilityId2\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"latitude\": 38.7,\r\n    \"longitude\": 75.0,\r\n    \"specialization\": \"Optometry\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/facility",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"facility"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Facility 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"facilityId3\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"latitude\": 39.7,\r\n    \"longitude\": 74.0,\r\n    \"specialization\": \"Dentistry\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/facility",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"facility"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Facility 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"facilityId4\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"latitude\": 41.7,\r\n    \"longitude\": 73.0,\r\n    \"specialization\": \"Emergency Room\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/facility",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"facility"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Facility Missing Values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'specialization' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"latitude\": 41.7,\r\n    \"longitude\": 73.0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/facility",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"facility"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Facilities",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/facilities",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"facilities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Facility by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{facilityId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/facility",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"facility"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Facility Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/facility",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"facility"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Facility Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No facility found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/facility",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"facility"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Facility",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Field updated correctly\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.latitude).to.eql(38.71);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{facilityId2}}\",\n    \"latitude\": 38.71,\n    \"longitude\": 75.01\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/facility",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"facility"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Facility Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"latitude\": 38.7,\n    \"longitude\": 75.0,\n    \"specialization\": \"Optometry\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/facility",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"facility"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Facility Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No facility found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\",\n    \"latitude\": 38.7,\n    \"longitude\": 75.0,\n    \"specialization\": \"Optometry\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/facility",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"facility"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Facility",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{facilityId3}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/facility",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"facility"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Facility Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/facility",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"facility"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Facility Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No facility found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/facility",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"facility"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Appointment",
			"item": [
				{
					"name": "Create Appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"appointmentId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"dateTime\": \"2023-10-25 12:00\",\r\n        \"cost\": 40\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointment",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Appointment 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"appointmentId2\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"dateTime\": \"2023-10-25 2:00\",\r\n        \"cost\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointment",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Appointment 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"appointmentId3\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"dateTime\": \"2023-10-25 12:30\",\r\n        \"cost\": 60\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointment",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Appointment 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"appointmentId4\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"dateTime\": \"2023-10-25 2:45\",\r\n        \"cost\": 70\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointment",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Appointment Missing Values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'cost' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"dateTime\": \"2023-10-25 2:45\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointment",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Appointment Malformed Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'dateTime' field value must be in the format yyyy-MM-dd HH:mm\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"dateTime\": \"2023-10-25 2:a45\",\r\n        \"cost\": 70\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointment",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Appointment Negative Cost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'cost' field must be a non-negative integer\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"dateTime\": \"2023-10-25 2:45\",\r\n        \"cost\": -1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointment",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Appointments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointments",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Appointment by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{appointmentId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointment",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Appointment Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointment",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Appointment Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No appointment found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointment",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Field updated correctly\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.cost).to.eql(65);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{appointmentId2}}\",\n    \"dateTime\": \"2023-10-25 3:00\",\n    \"cost\": 65\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointment",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Appointment Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"latitude\": 38.7,\n    \"longitude\": 75.0,\n    \"specialization\": \"Optometry\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointment",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Appointment Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No appointment found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\",\n    \"dateTime\": \"2023-10-25 2:00\",\n    \"cost\": 60\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointment",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Appointment Malformed Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'dateTime' field value must be in the format yyyy-MM-dd HH:mm\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{appointmentId2}}\",\n    \"dateTime\": \"2023-10a-25 2:00\",\n    \"cost\": 60\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointment",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Appointment Negative Cost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'cost' field must be a non-negative integer\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{appointmentId2}}\",\n    \"dateTime\": \"2023-10-25 3:00\",\n    \"cost\": -1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointment",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Appointment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{appointmentId3}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointment",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Appointment Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointment",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Appointment Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No appointment found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/appointment",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"appointment"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "InsurancePolicy",
			"item": [
				{
					"name": "Create Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"policyId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"premiumCost\": 50\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Policy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"policyId2\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"premiumCost\": 75\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Policy 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"policyId3\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"premiumCost\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Policy 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"policyId4\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"premiumCost\": 150\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Policy Missing Values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'premiumCost' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Policy Invalid Cost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'premiumCost' field must be a non-negative integer\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"premiumCost\": -1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Policies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policies",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Policy by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{policyId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Policy Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Policy Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No insurance policy found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Field updated correctly\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.premiumCost).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{policyId2}}\",\n    \"premiumCost\": 200\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Policy Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"premiumCost\": 150\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Policy Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No insurance policy found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\",\n    \"premiumCost\": 150\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Policy Negative Cost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'premiumCost' field must be a non-negative integer\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{policyId2}}\",\n    \"premiumCost\": -1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{policyId3}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Policy Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Policy Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No insurance policy found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Prescription",
			"item": [
				{
					"name": "Create Prescription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"prescriptionId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dosage\": 1,\r\n    \"dailyUses\": 1,\r\n    \"cost\": 50,\r\n    \"instructions\": \"Take once daily\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Prescription 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"prescriptionId2\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dosage\": 2,\r\n    \"dailyUses\": 1,\r\n    \"cost\": 70,\r\n    \"instructions\": \"Take two pills once daily\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Prescription 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"prescriptionId3\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dosage\": 1,\r\n    \"dailyUses\": 2,\r\n    \"cost\": 80,\r\n    \"instructions\": \"Take one pill twice daily\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Prescription 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"prescriptionId4\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dosage\": 1,\r\n    \"dailyUses\": 4,\r\n    \"cost\": 150,\r\n    \"instructions\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Prescription Missing Values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'dailyUses' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dosage\": 1,\r\n    \"cost\": 150,\r\n    \"instructions\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Prescription 4 Negative Dosage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'dosage' field must be a non-negative integer\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dosage\": -1,\r\n    \"dailyUses\": 4,\r\n    \"cost\": 150,\r\n    \"instructions\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Prescription 4 Negative Daily Uses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'dailyUses' field must be a non-negative integer\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dosage\": 1,\r\n    \"dailyUses\": -1,\r\n    \"cost\": 150,\r\n    \"instructions\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Prescription 4 Negative Cost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'cost' field must be a non-negative integer\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dosage\": 1,\r\n    \"dailyUses\": 4,\r\n    \"cost\": -1,\r\n    \"instructions\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Prescriptions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescriptions",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Prescription by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{prescriptionId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Prescription Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Prescription Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No prescription found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Prescription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Field updated correctly\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.instructions).to.eql(\"Take two pills three times daily\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{prescriptionId2}}\",\n    \"dailyUses\": 3,\n    \"cost\": 150,\n    \"instructions\": \"Take two pills three times daily\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Prescription Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dosage\": 2,\n    \"dailyUses\": 1,\n    \"cost\": 70,\n    \"instructions\": \"Take two pills once daily\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Prescription Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No prescription found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\",\n    \"dosage\": 2,\n    \"dailyUses\": 1,\n    \"cost\": 70,\n    \"instructions\": \"Take two pills once daily\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Prescription Negative Dosage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'dosage' field must be a non-negative integer\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{prescriptionId2}}\",\n    \"dosage\": -1,\n    \"dailyUses\": 3,\n    \"cost\": 150,\n    \"instructions\": \"Take two pills three times daily\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Prescription Negative Daily Uses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'dailyUses' field must be a non-negative integer\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{prescriptionId2}}\",\n    \"dailyUses\": -1,\n    \"cost\": 150,\n    \"instructions\": \"Take two pills three times daily\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Prescription Negative Cost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'cost' field must be a non-negative integer\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{prescriptionId2}}\",\n    \"dailyUses\": 3,\n    \"cost\": -1,\n    \"instructions\": \"Take two pills three times daily\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Prescription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{prescriptionId3}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Prescription Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Prescription Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No prescription found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/prescription",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"prescription"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Diagnosis",
			"item": [
				{
					"name": "Create Diagnosis",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"diagnosisId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"condition\": \"COVID-19\",\r\n    \"treatmentInfo\": \"Antiviral\",\r\n    \"date\": \"2023-10-3\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/diagnosis",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"diagnosis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Diagnosis 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"diagnosisId2\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"condition\": \"COVID-19\",\r\n        \"treatmentInfo\": \"Antiviral\",\r\n        \"date\": \"2023-10-12\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/diagnosis",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"diagnosis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Diagnosis 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"diagnosisId3\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"condition\": \"COVID-19\",\r\n        \"treatmentInfo\": \"Antiviral\",\r\n        \"date\": \"2023-10-14\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/diagnosis",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"diagnosis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Diagnosis 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"diagnosisId4\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"condition\": \"Flu\",\r\n        \"treatmentInfo\": \"Antiviral\",\r\n        \"date\": \"2023-10-14\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/diagnosis",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"diagnosis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Diagnosis Missing Values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'condition' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"treatmentInfo\": \"Antiviral\",\r\n        \"date\": \"2023-10-14\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/diagnosis",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"diagnosis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Diagnosis Malformed Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'date' field value must be in the format yyyy-MM-dd\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"condition\": \"Flu\",\r\n        \"treatmentInfo\": \"Antiviral\",\r\n        \"date\": \"2023a-10-14\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/diagnosis",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"diagnosis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Diagnoses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/diagnoses",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"diagnoses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Diagnosis by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{diagnosisId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/diagnosis",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"diagnosis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Diagnosis Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/diagnosis",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"diagnosis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Diagnosis Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No diagnosis found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/diagnosis",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"diagnosis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Diagnosis",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Field updated correctly\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.treatmentInfo).to.eql(\"In-Patient Treatment\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{diagnosisId2}}\",\n    \"treatmentInfo\": \"In-Patient Treatment\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/diagnosis",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"diagnosis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Diagnosis Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"condition\": \"COVID-19\",\n        \"treatmentInfo\": \"Antiviral\",\n        \"date\": \"2023-10-12\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/diagnosis",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"diagnosis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Diagnosis Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No diagnosis found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\",\n    \"condition\": \"COVID-19\",\n    \"treatmentInfo\": \"Antiviral\",\n    \"date\": \"2023-10-12\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/diagnosis",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"diagnosis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Diagnosis Malformed Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'date' field value must be in the format yyyy-MM-dd\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{diagnosisId2}}\",\n    \"condition\": \"COVID-19\",\n    \"treatmentInfo\": \"Antiviral\",\n    \"date\": \"2023-10-b12\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/diagnosis",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"diagnosis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Diagnosis",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{diagnosisId3}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/diagnosis",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"diagnosis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Diagnosis Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'id' field in request body\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/diagnosis",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"diagnosis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Diagnosis Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No diagnosis found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{$guid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/diagnosis",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"diagnosis"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Policy Joins",
			"item": [
				{
					"name": "Policy-Patient Join 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"policyId\": \"{{policyId2}}\",\n    \"patientId\": \"{{patientId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Policy-Patient Join 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"policyId\": \"{{policyId2}}\",\n    \"patientId\": \"{{patientId2}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Policy-Patient Join 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"policyId\": \"{{policyId}}\",\n    \"patientId\": \"{{patientId4}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Policy-Patient Join Missing ID 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'policyId' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patientId\": \"{{patientId4}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Policy-Patient Join Missing ID 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'patientId' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"policyId\": \"{{policyId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Policy-Patient Join Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"'patientId' field must contain a valid UUID value\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"policyId\": \"{{policyId}}\",\n    \"patientId\": \"2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Policy-Patient Join Nonexistent ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No insurance policy found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"policyId\": \"{{$guid}}\",\n    \"patientId\": \"{{patientId4}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Patients for Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check list length\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"policyId\": \"{{policyId2}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy/patients",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy",
								"patients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Patients for Policy Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'policyId' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy/patients",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy",
								"patients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Patients for Policy Nonexistent ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No insurance policy found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"policyId\": \"{{$guid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy/patients",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy",
								"patients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Policy for Patient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patientId\": \"{{patientId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/patient/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"patient",
								"policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Policy for Patient Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'patientId' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/patient/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"patient",
								"policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Policy for Patient Nonexistent ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No patient found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patientId\": \"{{$guid}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/patient/policy",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"patient",
								"policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Policy-Patient Delete Join",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"policyId\": \"{{policyId}}\",\n    \"patientId\": \"{{patientId4}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Policy-Patient Delete Join Missing ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Missing 'patientId' field in request body\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"policyId\": \"{{policyId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy",
								"patient"
							]
						}
					},
					"response": []
				},
				{
					"name": "Policy-Patient Delete Join Nonexistent ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No insurance policy found with id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"policyId\": \"{{$guid}}\",\n    \"patientId\": \"{{patientId4}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseUrl}}:8080/api/policy/patient",
							"protocol": "http",
							"host": [
								"{{baseUrl}}"
							],
							"port": "8080",
							"path": [
								"api",
								"policy",
								"patient"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "patientId",
			"value": ""
		},
		{
			"key": "patientId2",
			"value": ""
		},
		{
			"key": "patientId3",
			"value": ""
		},
		{
			"key": "patientId4",
			"value": ""
		},
		{
			"key": "practitionerId",
			"value": ""
		},
		{
			"key": "practitionerId2",
			"value": ""
		},
		{
			"key": "practitionerId3",
			"value": ""
		},
		{
			"key": "practitionerId4",
			"value": ""
		},
		{
			"key": "facilityId",
			"value": ""
		},
		{
			"key": "facilityId2",
			"value": ""
		},
		{
			"key": "facilityId3",
			"value": ""
		},
		{
			"key": "facilityId4",
			"value": ""
		},
		{
			"key": "appointmentId",
			"value": ""
		},
		{
			"key": "appointmentId2",
			"value": ""
		},
		{
			"key": "appointmentId3",
			"value": ""
		},
		{
			"key": "appointmentId4",
			"value": ""
		},
		{
			"key": "diagnosisId",
			"value": ""
		},
		{
			"key": "diagnosisId2",
			"value": ""
		},
		{
			"key": "diagnosisId3",
			"value": ""
		},
		{
			"key": "diagnosisId4",
			"value": ""
		},
		{
			"key": "policyId",
			"value": ""
		},
		{
			"key": "policyId2",
			"value": ""
		},
		{
			"key": "policyId3",
			"value": ""
		},
		{
			"key": "policyId4",
			"value": ""
		},
		{
			"key": "prescriptionId",
			"value": ""
		},
		{
			"key": "prescriptionId2",
			"value": ""
		},
		{
			"key": "prescriptionId3",
			"value": ""
		},
		{
			"key": "prescriptionId4",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		}
	]
}