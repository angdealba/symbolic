# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions: write-all

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.1
        env:
          MYSQL_DATABASE: medical_db
          MYSQL_ROOT_PASSWORD: password
          MYSQL_USER: testuser
          MYSQL_PASSWORD: password
        ports:
          - '3306:3306'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Set up MySQL Database
      run: |
        mysql -h 127.0.0.1 --port 3306 -u root -ppassword -e "CREATE USER 'testuser'@'localhost' IDENTIFIED BY 'password';"
        mysql -h 127.0.0.1 --port 3306 -u root -ppassword -e "DROP DATABASE IF EXISTS medical_db;"
        mysql -h 127.0.0.1 --port 3306 -u root -ppassword -e "CREATE DATABASE medical_db;"
        mysql -h 127.0.0.1 --port 3306 -u root -ppassword -e "GRANT ALL ON medical_db.* TO 'testuser'@'localhost';"
    - name: Build and Test with Maven
      run: mvn -B package --file pom.xml spotbugs:spotbugs checkstyle:checkstyle
    - name: jacoco-reporter
      # You may pin to the exact commit or the version.
      # uses: PavanMudigonda/jacoco-reporter@76044ebc031589dcbce0bb1048ffee1072a43f97
      uses: PavanMudigonda/jacoco-reporter@v4.9
      with:
        # Path to the JaCoCo coverage results file which will be used to generate a report. The only coverage results format supported is the JaCoCo XML schema.
        coverage_results_path: target/site/jacoco/jacoco.xml
        # GITHUB_TOKEN to authenticate against API calls to attach report to Workflow Run.
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Push SpotBugs report
      # You may pin to the exact commit or the version.
      # uses: jwgmeligmeyling/spotbugs-github-action@b8e2c3523acb34c87f14e18cbcd2d87db8c8584e
      uses: jwgmeligmeyling/spotbugs-github-action@v1.2
      with:
        # A file, directory or wildcard pattern that describes where to find the reports
        path: target/spotbugsXml.xml
        # Check run name under which the report is created
        # name: # optional, default is spotbugs
        # Check run title under which the report is created
        # title: # optional, default is SpotBugs Source Code Analyzer report
        # Personal access token (PAT) used to fetch the repository. The PAT is configured with the local git config, which enables your scripts to run authenticated git commands. The post-job step removes the PAT. We recommend using a service account with the least permissions necessary. Also when generating a new PAT, select the least scopes necessary. [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Push Checkstyle report
      # You may pin to the exact commit or the version.
      # uses: jwgmeligmeyling/checkstyle-github-action@50292990e18466f2c5d95d04ff5fab931254fa5f
      uses: jwgmeligmeyling/checkstyle-github-action@v1.2
      with:
        # A file, directory or wildcard pattern that describes where to find the reports
        path: target/checkstyle-result.xml
        # Check run name under which the report is created
        # name: # optional, default is Checkstyle
        # Check run title under which the report is created
        # title: # optional, default is Checkstyle report
        # Personal access token (PAT) used to fetch the repository. The PAT is configured with the local git config, which enables your scripts to run authenticated git commands. The post-job step removes the PAT. We recommend using a service account with the least permissions necessary. Also when generating a new PAT, select the least scopes necessary. [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
        token: ${{ secrets.GITHUB_TOKEN }}
          
          
          

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
